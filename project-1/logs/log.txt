2020-12-02 08:20:25 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-12-02 08:20:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-12-02 08:20:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-12-02 08:20:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390V8] -> [org.hibernate.dialect.DB2390V8Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [HANAColumnStore] -> [org.hibernate.dialect.HANAColumnStoreDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [HANARowStore] -> [org.hibernate.dialect.HANARowStoreDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57] -> [org.hibernate.dialect.MySQL57Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL8] -> [org.hibernate.dialect.MySQL8Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Atomikos] -> [org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.AtomikosJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SapNetWeaver] -> [org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SapNetWeaverJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereLiberty] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
2020-12-02 08:20:25 TRACE StrategySelectorImpl:70 - Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
2020-12-02 08:20:25 INFO  Version:46 - HHH000412: Hibernate Core {5.4.3.Final}
2020-12-02 08:20:25 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-12-02 08:20:25 TRACE ClassLoaderServiceImpl:185 - trying via [new URL("hibernate.cfg.xml")]
2020-12-02 08:20:25 TRACE ClassLoaderServiceImpl:196 - trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
2020-12-02 08:20:25 TRACE LocalXmlResourceResolver:35 - In resolveEntity(-//Hibernate/Hibernate Configuration DTD 3.0//EN, http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd, null, null)
2020-12-02 08:20:25 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-12-02 08:20:25 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2020-12-02 08:20:25 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-12-02 08:20:25 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-12-02 08:20:25 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-12-02 08:20:25 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-12-02 08:20:25 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
2020-12-02 08:20:25 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.cache.spi.RegionFactory]
2020-12-02 08:20:25 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-12-02 08:20:25 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-12-02 08:20:25 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@64dafeed
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@64dafeed
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64dafeed
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1dd0e7c4
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7be58f16
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@60f7cc1d
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5827af16
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5827af16
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5827af16
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@12dae582
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@12dae582
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@12dae582
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2bef51f2
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2bef51f2
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2bef51f2
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@24d4d7c9
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@24d4d7c9
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@24d4d7c9
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3c435123
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3c435123
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c435123
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5357c287
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5357c287
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5357c287
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5b04476e
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5b04476e
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5b04476e
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4a335fa8
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4a335fa8
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@30990c1b
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@30990c1b
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@62fe6067
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@62fe6067
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47404bea
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@29e6eb25
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@7bc10d84
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7bc10d84
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@33e01298
2020-12-02 08:20:25 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@33e01298
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@2756c0a7
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2756c0a7
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c8bca63
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6c8bca63
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1c55f277
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1c55f277
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@376a312c
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@376a312c
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64df9a61
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64df9a61
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3fc9dfc5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3fc9dfc5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44e3760b
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44e3760b
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@65aa6596
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65aa6596
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@346939bf
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@346939bf
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@f6c03cb
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f6c03cb
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f6c03cb
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@768ccdc5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@1cd201a8
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1cd201a8
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1cd201a8
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f28bd56
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@7c7d3c46
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7c7d3c46
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@7a48e6e2
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a48e6e2
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@34a75079
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34a75079
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4052274f
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4052274f
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28276e50
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28276e50
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@741b3bc3
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5b58ed3c
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b58ed3c
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5b58ed3c
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@32f0fba8
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@32f0fba8
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@32f0fba8
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@61526469
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@7c351808
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@d5ae57e
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@d5ae57e
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@d5ae57e
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6e16b8b5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6e16b8b5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6e16b8b5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@4ebea12c
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@7fcbe147
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@fd0e5b6
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@fd0e5b6
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@475835b1
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@89c10b7
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@89c10b7
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@6175619b
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6175619b
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@751d3241
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30ea8c23
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@52500920
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@5ac86ba5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ac86ba5
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9635fa
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@53ab0286
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63c5efee
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2d10e0b1
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c98290c
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@172ca72b
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5bda80bf
2020-12-02 08:20:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71e5f61d
2020-12-02 08:20:26 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
2020-12-02 08:20:26 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-12-02 08:20:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-12-02 08:20:26 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2020-12-02 08:20:26 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
2020-12-02 08:20:26 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
2020-12-02 08:20:26 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2020-12-02 08:20:26 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-12-02 08:20:26 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.c3zhu1wwmj5s.us-east-2.rds.amazonaws.com:5432/postgres]
2020-12-02 08:20:26 INFO  pooling:121 - HHH10001001: Connection properties: {password=postgres, dialect=org.hibernate.dialect.PostgreSQLDialect, user=postgres}
2020-12-02 08:20:26 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-12-02 08:20:26 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-12-02 08:20:26 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 3 (min=1)
2020-12-02 08:20:26 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.4
      major : 12
      minor : 4
2020-12-02 08:20:26 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.9
      major : 42
      minor : 2
2020-12-02 08:20:26 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-12-02 08:20:26 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2020-12-02 08:20:26 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roles_roleid_seq]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users_userid_seq]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_status_statusid_seq]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_type_typeid_seq]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments_reimbursmentid_seq]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
2020-12-02 08:20:31 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-12-02 08:20:31 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@205b132e
2020-12-02 08:20:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@205b132e
2020-12-02 08:20:31 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@28276e50
2020-12-02 08:20:31 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d171ce0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22bd2039]
2020-12-02 08:20:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.revature.models.User
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [DTYPE]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-12-02 08:20:31 DEBUG EntityBinder:430 - Import with entity name User
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: User -> com.revature.models.User
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: com.revature.models.User -> com.revature.models.User
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users]
2020-12-02 08:20:31 DEBUG EntityBinder:873 - Bind entity com.revature.models.User on table users
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.userid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [userid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [userid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=userid, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userid with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:userid]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for userid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [userid]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property userid
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading userid with null
2020-12-02 08:20:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(userid)]), userid, identity, , ...)
2020-12-02 08:20:31 TRACE AnnotationBinder:2457 - Bind @Id on userid
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.authoredReimbursments
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [authoredReimbursments]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [authoredReimbursments]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authoredReimbursments, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [authoredReimbursments_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authoredReimbursments_KEY, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [authoredReimbursments_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authoredReimbursments_KEY', referencedColumn='null', mappedBy='null'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='author'}
2020-12-02 08:20:31 DEBUG CollectionBinder:449 - Collection role: com.revature.models.User.authoredReimbursments
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property authoredReimbursments
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading authoredReimbursments with none
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.email
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [email]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [email]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:email]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [email]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property email
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading email with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.firstname
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [firstname]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [firstname]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstname with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:firstname]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for firstname
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [firstname]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property firstname
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading firstname with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.lastname
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [lastname]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [lastname]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastname with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:lastname]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for lastname
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [lastname]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property lastname
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading lastname with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.password
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [password]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [password]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:password]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [password]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property password
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading password with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='resolver'}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolvedReimbursments]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolvedReimbursments]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=resolvedReimbursments, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolvedReimbursments_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=resolvedReimbursments_KEY, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolvedReimbursments_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolvedReimbursments_KEY', referencedColumn='null', mappedBy='null'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='resolver'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='resolver'}
2020-12-02 08:20:31 DEBUG CollectionBinder:449 - Collection role: com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property resolvedReimbursments
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading resolvedReimbursments with none
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.role
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='roleid', referencedColumn='', mappedBy=''}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [role]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [role]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property role
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading role with all
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.User.username
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [username]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [username]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.User:username]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [username]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property username
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading username with null
2020-12-02 08:20:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.revature.models.Role
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [DTYPE]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-12-02 08:20:31 DEBUG EntityBinder:430 - Import with entity name Role
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: Role -> com.revature.models.Role
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: com.revature.models.Role -> com.revature.models.Role
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roles]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roles]
2020-12-02 08:20:31 DEBUG EntityBinder:873 - Bind entity com.revature.models.Role on table roles
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Role.roleid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=roleid, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property roleid with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Role:roleid]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for roleid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property roleid
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading roleid with null
2020-12-02 08:20:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(roleid)]), roleid, identity, , ...)
2020-12-02 08:20:31 TRACE AnnotationBinder:2457 - Bind @Id on roleid
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Role.role
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [role]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [role]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=role, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property role with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Role:role]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for role
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [role]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property role
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading role with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Role.users
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
2020-12-02 08:20:31 DEBUG CollectionBinder:449 - Collection role: com.revature.models.Role.users
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property users
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading users with none
2020-12-02 08:20:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.revature.models.Status
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [DTYPE]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-12-02 08:20:31 DEBUG EntityBinder:430 - Import with entity name Status
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: Status -> com.revature.models.Status
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: com.revature.models.Status -> com.revature.models.Status
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_status]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_status]
2020-12-02 08:20:31 DEBUG EntityBinder:873 - Bind entity com.revature.models.Status on table reimbursment_status
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Status.statusid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_status), mappingColumn=statusid, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property statusid with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Status:statusid]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for statusid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property statusid
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading statusid with null
2020-12-02 08:20:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(statusid)]), statusid, identity, , ...)
2020-12-02 08:20:31 TRACE AnnotationBinder:2457 - Bind @Id on statusid
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Status.reimbursements
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursements]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursements]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_status), mappingColumn=reimbursements, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_status), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_status), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursements_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_status), mappingColumn=reimbursements_KEY, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursements_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='reimbursements_KEY', referencedColumn='null', mappedBy='null'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='status'}
2020-12-02 08:20:31 DEBUG CollectionBinder:449 - Collection role: com.revature.models.Status.reimbursements
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property reimbursements
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading reimbursements with none
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Status.status
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [status]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [status]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property status with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Status:status]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for status
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [status]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property status
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading status with null
2020-12-02 08:20:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.revature.models.Type
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [DTYPE]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-12-02 08:20:31 DEBUG EntityBinder:430 - Import with entity name Type
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: Type -> com.revature.models.Type
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: com.revature.models.Type -> com.revature.models.Type
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_type]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_type]
2020-12-02 08:20:31 DEBUG EntityBinder:873 - Bind entity com.revature.models.Type on table reimbursment_type
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Type.typeid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_type), mappingColumn=typeid, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property typeid with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Type:typeid]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for typeid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property typeid
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading typeid with null
2020-12-02 08:20:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(typeid)]), typeid, identity, , ...)
2020-12-02 08:20:31 TRACE AnnotationBinder:2457 - Bind @Id on typeid
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Type.reimbursments
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_type), mappingColumn=reimbursments, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_type), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [element]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_type), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_type), mappingColumn=reimbursments_KEY, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments_KEY]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='reimbursments_KEY', referencedColumn='null', mappedBy='null'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='type'}
2020-12-02 08:20:31 DEBUG CollectionBinder:449 - Collection role: com.revature.models.Type.reimbursments
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property reimbursments
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading reimbursments with none
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Type.type
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [type]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [type]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursment_type), mappingColumn=type, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property type with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Type:type]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for type
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [type]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property type
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading type with null
2020-12-02 08:20:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.revature.models.Reimbursement
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [DTYPE]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-12-02 08:20:31 DEBUG EntityBinder:430 - Import with entity name Reimbursement
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: Reimbursement -> com.revature.models.Reimbursement
2020-12-02 08:20:31 TRACE InFlightMetadataCollectorImpl:716 - Import: com.revature.models.Reimbursement -> com.revature.models.Reimbursement
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments]
2020-12-02 08:20:31 DEBUG EntityBinder:873 - Bind entity com.revature.models.Reimbursement on table reimbursments
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.reimbursmentid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursmentid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursmentid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=reimbursmentid, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property reimbursmentid with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Reimbursement:reimbursmentid]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for reimbursmentid
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursmentid]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property reimbursmentid
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading reimbursmentid with null
2020-12-02 08:20:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(reimbursmentid)]), reimbursmentid, identity, , ...)
2020-12-02 08:20:31 TRACE AnnotationBinder:2457 - Bind @Id on reimbursmentid
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.amount
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [amount]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [amount]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property amount with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Reimbursement:amount]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for amount
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [amount]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property amount
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading amount with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.author
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='author', referencedColumn='', mappedBy=''}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=author, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property author
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading author with all
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.description
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [description]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [description]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Reimbursement:description]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [description]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property description
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading description with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.resolved
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolved]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolved]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=resolved, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property resolved with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Reimbursement:resolved]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for resolved
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolved]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property resolved
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading resolved with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.resolver
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='resolver', referencedColumn='', mappedBy=''}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=resolver, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property resolver
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading resolver with all
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.status
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='statusid', referencedColumn='', mappedBy=''}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [status]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [status]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=status, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property status
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading status with all
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.submitted
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [submitted]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [submitted]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=submitted, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property submitted with lazy=false
2020-12-02 08:20:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.revature.models.Reimbursement:submitted]
2020-12-02 08:20:31 DEBUG SimpleValueBinder:411 - building SimpleValue for submitted
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [submitted]
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property submitted
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading submitted with null
2020-12-02 08:20:31 TRACE AnnotationBinder:1644 - Processing annotations of com.revature.models.Reimbursement.type
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='typeid', referencedColumn='', mappedBy=''}
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [type]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [type]
2020-12-02 08:20:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(reimbursments), mappingColumn=type, insertable=true, updatable=true, unique=false}
2020-12-02 08:20:31 DEBUG PropertyBinder:266 - Building property type
2020-12-02 08:20:31 TRACE PropertyBinder:329 - Cascading type with all
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for userid
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstname
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastname
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for roleid
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for role
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for statusid
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for status
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for typeid
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for type
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for reimbursmentid
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for amount
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for resolved
2020-12-02 08:20:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for submitted
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [null]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [null]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [null]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [null]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [null]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 DEBUG PrimaryKey:35 - Forcing column [userid] to be non-null as it is part of the primary key for table [users]
2020-12-02 08:20:31 DEBUG PrimaryKey:35 - Forcing column [roleid] to be non-null as it is part of the primary key for table [roles]
2020-12-02 08:20:31 DEBUG PrimaryKey:35 - Forcing column [statusid] to be non-null as it is part of the primary key for table [reimbursment_status]
2020-12-02 08:20:31 DEBUG PrimaryKey:35 - Forcing column [typeid] to be non-null as it is part of the primary key for table [reimbursment_type]
2020-12-02 08:20:31 DEBUG PrimaryKey:35 - Forcing column [reimbursmentid] to be non-null as it is part of the primary key for table [reimbursments]
2020-12-02 08:20:31 DEBUG CollectionSecondPass:50 - Second pass for collection: com.revature.models.User.authoredReimbursments
2020-12-02 08:20:31 DEBUG CollectionBinder:897 - Binding a OneToMany: com.revature.models.User.authoredReimbursments through a foreign key
2020-12-02 08:20:31 DEBUG CollectionBinder:935 - Mapping collection: com.revature.models.User.authoredReimbursments -> reimbursments
2020-12-02 08:20:31 DEBUG TableBinder:565 - Retrieving property com.revature.models.Reimbursement.author
2020-12-02 08:20:31 DEBUG CollectionSecondPass:67 - Mapped collection key: author, one-to-many: com.revature.models.Reimbursement
2020-12-02 08:20:31 DEBUG CollectionSecondPass:50 - Second pass for collection: com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:31 DEBUG CollectionBinder:897 - Binding a OneToMany: com.revature.models.User.resolvedReimbursments through a foreign key
2020-12-02 08:20:31 DEBUG CollectionBinder:935 - Mapping collection: com.revature.models.User.resolvedReimbursments -> reimbursments
2020-12-02 08:20:31 DEBUG TableBinder:565 - Retrieving property com.revature.models.Reimbursement.resolver
2020-12-02 08:20:31 DEBUG CollectionSecondPass:67 - Mapped collection key: resolver, one-to-many: com.revature.models.Reimbursement
2020-12-02 08:20:31 DEBUG CollectionSecondPass:50 - Second pass for collection: com.revature.models.Role.users
2020-12-02 08:20:31 DEBUG CollectionBinder:897 - Binding a OneToMany: com.revature.models.Role.users through a foreign key
2020-12-02 08:20:31 DEBUG CollectionBinder:935 - Mapping collection: com.revature.models.Role.users -> users
2020-12-02 08:20:31 DEBUG TableBinder:565 - Retrieving property com.revature.models.User.role
2020-12-02 08:20:31 DEBUG CollectionSecondPass:67 - Mapped collection key: roleid, one-to-many: com.revature.models.User
2020-12-02 08:20:31 DEBUG CollectionSecondPass:50 - Second pass for collection: com.revature.models.Status.reimbursements
2020-12-02 08:20:31 DEBUG CollectionBinder:897 - Binding a OneToMany: com.revature.models.Status.reimbursements through a foreign key
2020-12-02 08:20:31 DEBUG CollectionBinder:935 - Mapping collection: com.revature.models.Status.reimbursements -> reimbursments
2020-12-02 08:20:31 DEBUG TableBinder:565 - Retrieving property com.revature.models.Reimbursement.status
2020-12-02 08:20:31 DEBUG CollectionSecondPass:67 - Mapped collection key: statusid, one-to-many: com.revature.models.Reimbursement
2020-12-02 08:20:31 DEBUG CollectionSecondPass:50 - Second pass for collection: com.revature.models.Type.reimbursments
2020-12-02 08:20:31 DEBUG CollectionBinder:897 - Binding a OneToMany: com.revature.models.Type.reimbursments through a foreign key
2020-12-02 08:20:31 DEBUG CollectionBinder:935 - Mapping collection: com.revature.models.Type.reimbursments -> reimbursments
2020-12-02 08:20:31 DEBUG TableBinder:565 - Retrieving property com.revature.models.Reimbursement.type
2020-12-02 08:20:31 DEBUG CollectionSecondPass:67 - Mapped collection key: typeid, one-to-many: com.revature.models.Reimbursement
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.User
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [FKlreps2djmjntou9sqhtx32lc1]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.User
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [FK3okx3okv4k4m38dvkd1x15h4r]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.Status
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [FKj55bgutc256vhmb8bc3jif3gv]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.Type
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [FKpd764t6iyep3o5dup24e1ggpx]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.Role
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [FKgrhs0suhl8cbodxn47xadxp94]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.User
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [author]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.User
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [resolver]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.Status
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [statusid]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.Type
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [typeid]
2020-12-02 08:20:31 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.revature.models.Role
2020-12-02 08:20:31 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roleid]
2020-12-02 08:20:31 TRACE BatchFetchStyle:51 - Interpreting BatchFetchStyle from setting : null
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
2020-12-02 08:20:31 DEBUG SessionFactoryImpl:196 - Building session factory
2020-12-02 08:20:31 DEBUG Settings:68 - SessionFactory name : null
2020-12-02 08:20:31 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-12-02 08:20:31 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-12-02 08:20:31 DEBUG Settings:72 - Statistics: disabled
2020-12-02 08:20:31 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-12-02 08:20:31 DEBUG Settings:75 - Default entity-mode: pojo
2020-12-02 08:20:31 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-12-02 08:20:31 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-12-02 08:20:31 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-12-02 08:20:31 DEBUG Settings:80 - Default batch fetch size: -1
2020-12-02 08:20:31 DEBUG Settings:81 - Maximum outer join fetch depth: null
2020-12-02 08:20:31 DEBUG Settings:82 - Default null ordering: NONE
2020-12-02 08:20:31 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-12-02 08:20:31 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-12-02 08:20:31 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-12-02 08:20:31 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-12-02 08:20:31 DEBUG Settings:90 - Query language substitutions: {}
2020-12-02 08:20:31 DEBUG Settings:91 - Named query checking : enabled
2020-12-02 08:20:31 DEBUG Settings:93 - Second-level cache: disabled
2020-12-02 08:20:31 DEBUG Settings:94 - Second-level query cache: disabled
2020-12-02 08:20:31 DEBUG Settings:95 - Second-level query cache factory: null
2020-12-02 08:20:31 DEBUG Settings:96 - Second-level cache region prefix: null
2020-12-02 08:20:31 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-12-02 08:20:31 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-12-02 08:20:31 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-12-02 08:20:31 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-12-02 08:20:31 DEBUG Settings:102 - JDBC batch size: 15
2020-12-02 08:20:31 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-12-02 08:20:31 DEBUG Settings:104 - Scrollable result sets: enabled
2020-12-02 08:20:31 DEBUG Settings:105 - Wrap result sets: disabled
2020-12-02 08:20:31 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-12-02 08:20:31 DEBUG Settings:107 - JDBC result set fetch size: null
2020-12-02 08:20:31 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-12-02 08:20:31 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-12-02 08:20:31 DEBUG Settings:111 - JPA compliance - query : 
2020-12-02 08:20:31 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-12-02 08:20:31 DEBUG Settings:113 - JPA compliance - lists : 
2020-12-02 08:20:31 DEBUG Settings:114 - JPA compliance - transactions : 
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
2020-12-02 08:20:31 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2020-12-02 08:20:31 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=C:\Users\pjwar\Documents\Project 1\project-1-PJWarring\project-1\target\classes;C:\Users\pjwar\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\pjwar\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\pjwar\.m2\repository\org\postgresql\postgresql\42.2.9\postgresql-42.2.9.jar;C:\Users\pjwar\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.1\jackson-databind-2.10.1.jar;C:\Users\pjwar\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.1\jackson-annotations-2.10.1.jar;C:\Users\pjwar\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.1\jackson-core-2.10.1.jar;C:\Users\pjwar\.m2\repository\org\hibernate\hibernate-core\5.4.3.Final\hibernate-core-5.4.3.Final.jar;C:\Users\pjwar\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\pjwar\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\pjwar\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\pjwar\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\pjwar\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\pjwar\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\pjwar\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\pjwar\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\pjwar\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\pjwar\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\pjwar\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\pjwar\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\pjwar\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\pjwar\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\pjwar\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\pjwar\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\pjwar\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=14, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\pjwar\Downloads\sts-4.8.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_14.0.2.v20200815-0932\jre\bin, sun.java.command=com.revature.Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\pjwar, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=C:\Users\pjwar\Downloads\sts-4.8.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_14.0.2.v20200815-0932\jre, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=14.0.2+12-46, user.name=pjwar, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.c3zhu1wwmj5s.us-east-2.rds.amazonaws.com:5432/postgres, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\pjwar\AppData\Local\Temp\, java.version=14.0.2, user.dir=C:\Users\pjwar\Documents\Project 1\project-1-PJWarring\project-1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22e5f96e, java.library.path=C:\Users\pjwar\Downloads\sts-4.8.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_14.0.2.v20200815-0932\jre\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Users/pjwar/Downloads/sts-4.8.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_14.0.2.v20200815-0932/jre/bin/server;C:/Users/pjwar/Downloads/sts-4.8.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_14.0.2.v20200815-0932/jre/bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Users\pjwar\Downloads\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\nodejs\;C:\Users\pjwar\AppData\Local\Microsoft\WindowsApps;;C:\Users\pjwar\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\pjwar\AppData\Roaming\npm;C:\Users\pjwar\Downloads\sts-4.8.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=14.0.2+12-46, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, java.class.version=58.0}
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
2020-12-02 08:20:31 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-12-02 08:20:31 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2020-12-02 08:20:31 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d171ce0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2b03d52f]
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
2020-12-02 08:20:31 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
2020-12-02 08:20:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Status] is safe
2020-12-02 08:20:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Status
2020-12-02 08:20:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Status] is safe
2020-12-02 08:20:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Status
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [reimbursements], existing type = [org.hibernate.type.BagType(com.revature.models.Status.reimbursements)], incoming type = [org.hibernate.type.BagType(com.revature.models.Status.reimbursements)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.User] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.User
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.User] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.User
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role.roleid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [authoredReimbursments], existing type = [org.hibernate.type.BagType(com.revature.models.User.authoredReimbursments)], incoming type = [org.hibernate.type.BagType(com.revature.models.User.authoredReimbursments)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [email], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [firstname], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [lastname], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolvedReimbursments], existing type = [org.hibernate.type.BagType(com.revature.models.User.resolvedReimbursments)], incoming type = [org.hibernate.type.BagType(com.revature.models.User.resolvedReimbursments)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role], existing type = [org.hibernate.type.ManyToOneType(com.revature.models.Role)], incoming type = [org.hibernate.type.ManyToOneType(com.revature.models.Role)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role.roleid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role.roleid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [username], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Type] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Type
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Type] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Type
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [reimbursments], existing type = [org.hibernate.type.BagType(com.revature.models.Type.reimbursments)], incoming type = [org.hibernate.type.BagType(com.revature.models.Type.reimbursments)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Role] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Role
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Role] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Role
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [role], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [users], existing type = [org.hibernate.type.BagType(com.revature.models.Role.users)], incoming type = [org.hibernate.type.BagType(com.revature.models.Role.users)]
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Reimbursement] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.revature.models.Reimbursement] is safe
2020-12-02 08:20:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.revature.models.Reimbursement
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [author.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [author.userid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolver.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolver.userid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status.statusid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type.typeid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [amount], existing type = [org.hibernate.type.DoubleType@5b04476e], incoming type = [org.hibernate.type.DoubleType@5b04476e]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [author], existing type = [org.hibernate.type.ManyToOneType(com.revature.models.User)], incoming type = [org.hibernate.type.ManyToOneType(com.revature.models.User)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [author.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [author.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [author.userid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [author.userid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@62fe6067], incoming type = [org.hibernate.type.StringType@62fe6067]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolved], existing type = [org.hibernate.type.TimestampType@f6c03cb], incoming type = [org.hibernate.type.TimestampType@f6c03cb]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolver], existing type = [org.hibernate.type.ManyToOneType(com.revature.models.User)], incoming type = [org.hibernate.type.ManyToOneType(com.revature.models.User)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolver.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolver.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolver.userid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [resolver.userid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status], existing type = [org.hibernate.type.ManyToOneType(com.revature.models.Status)], incoming type = [org.hibernate.type.ManyToOneType(com.revature.models.Status)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status.statusid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [status.statusid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [submitted], existing type = [org.hibernate.type.TimestampType@f6c03cb], incoming type = [org.hibernate.type.TimestampType@f6c03cb]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type], existing type = [org.hibernate.type.ManyToOneType(com.revature.models.Type)], incoming type = [org.hibernate.type.ManyToOneType(com.revature.models.Type)]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type.typeid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 TRACE AbstractPropertyMapping:125 - Skipping duplicate registration of path [type.typeid], existing type = [org.hibernate.type.IntegerType@24d4d7c9], incoming type = [org.hibernate.type.IntegerType@24d4d7c9]
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.revature.models.Role.users
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:690 -  Row insert: update users set roleid=? where userid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:693 -  Row update: update users set  where userid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:696 -  Row delete: update users set roleid=null where roleid=? and userid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update users set roleid=null where roleid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.revature.models.User.authoredReimbursments
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimbursments set author=? where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:693 -  Row update: update reimbursments set  where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimbursments set author=null where author=? and reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimbursments set author=null where author=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimbursments set resolver=? where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:693 -  Row update: update reimbursments set  where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimbursments set resolver=null where resolver=? and reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimbursments set resolver=null where resolver=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.revature.models.Status.reimbursements
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimbursments set statusid=? where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:693 -  Row update: update reimbursments set  where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimbursments set statusid=null where statusid=? and reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimbursments set statusid=null where statusid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.revature.models.Type.reimbursments
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:690 -  Row insert: update reimbursments set typeid=? where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:693 -  Row update: update reimbursments set  where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:696 -  Row delete: update reimbursments set typeid=null where typeid=? and reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update reimbursments set typeid=null where typeid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3790 - Static SQL for entity: com.revature.models.Status
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3795 -  Version select: select statusid from reimbursment_status where statusid =?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3798 -  Snapshot select: select status_.statusid, status_.status as status2_0_ from reimbursment_status status_ where status_.statusid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimbursment_status (status, statusid) values (?, ?)
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Update 0: update reimbursment_status set status=? where statusid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimbursment_status where statusid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3806 -  Identity insert: insert into reimbursment_status (status) values (?)
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Status
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46dcbeab]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6af90849
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=reimbursment_status, columns={statusid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6af90849
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Status
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursements
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=reimbursements, type=java.util.Collection(com.revature.models.Status.reimbursements) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60a7e509]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78cfa264]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=reimbursements, type=java.util.Collection(com.revature.models.Status.reimbursements) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=status, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=status, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6af90849
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Status
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Status)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Status, querySpaceUid=<gen:0>, path=com.revature.models.Status)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Status.reimbursements, querySpaceUid=<gen:1>, path=com.revature.models.Status.reimbursements)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:2>, path=com.revature.models.Status.reimbursements.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {statusid1_0_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Status [NONE]: select status0_.statusid as statusid1_0_0_, status0_.status as status2_0_0_ from reimbursment_status status0_ where status0_.statusid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Status
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd43562]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59939293
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=reimbursment_status, columns={statusid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59939293
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Status
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursements
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=reimbursements, type=java.util.Collection(com.revature.models.Status.reimbursements) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68b366e2]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d74c81b]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=reimbursements, type=java.util.Collection(com.revature.models.Status.reimbursements) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=status, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=status, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59939293
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Status
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Status)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Status, querySpaceUid=<gen:0>, path=com.revature.models.Status)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Status.reimbursements, querySpaceUid=<gen:1>, path=com.revature.models.Status.reimbursements)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:2>, path=com.revature.models.Status.reimbursements.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {statusid1_0_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Status [READ]: select status0_.statusid as statusid1_0_0_, status0_.status as status2_0_0_ from reimbursment_status status0_ where status0_.statusid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.revature.models.Status: select status0_.statusid as statusid1_0_0_, status0_.status as status2_0_0_ from reimbursment_status status0_ where status0_.statusid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.revature.models.Status: select status0_.statusid as statusid1_0_0_, status0_.status as status2_0_0_ from reimbursment_status status0_ where status0_.statusid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3790 - Static SQL for entity: com.revature.models.User
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3795 -  Version select: select userid from users where userid =?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3798 -  Snapshot select: select user_.userid, user_.email as email2_4_, user_.firstname as firstnam3_4_, user_.lastname as lastname4_4_, user_.password as password5_4_, user_.roleid as roleid7_4_, user_.username as username6_4_ from users user_ where user_.userid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, firstname, lastname, password, roleid, username, userid) values (?, ?, ?, ?, ?, ?, ?)
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, firstname=?, lastname=?, password=?, roleid=?, username=? where userid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where userid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3806 -  Identity insert: insert into users (email, firstname, lastname, password, roleid, username) values (?, ?, ?, ?, ?, ?)
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.User
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20580d4e]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21bd128b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=users, columns={userid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21bd128b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.User
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authoredReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=authoredReimbursments, type=java.util.Collection(com.revature.models.User.authoredReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d0b05]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b432e53]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=authoredReimbursments, type=java.util.Collection(com.revature.models.User.authoredReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=email, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstname
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=firstname, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=firstname, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastname
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=password, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolvedReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolvedReimbursments, type=java.util.Collection(com.revature.models.User.resolvedReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b916808]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f11ebb]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolvedReimbursments, type=java.util.Collection(com.revature.models.User.resolvedReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=role, type=com.revature.models.Role [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a6c54c3]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=role, type=com.revature.models.Role [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=username, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21bd128b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.User
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=<gen:0>, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.authoredReimbursments, querySpaceUid=<gen:1>, path=com.revature.models.User.authoredReimbursments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:2>, path=com.revature.models.User.authoredReimbursments.<elements>)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.resolvedReimbursments, querySpaceUid=<gen:3>, path=com.revature.models.User.resolvedReimbursments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:4>, path=com.revature.models.User.resolvedReimbursments.<elements>)
          - EntityAttributeFetchImpl(entity=com.revature.models.Role, querySpaceUid=<gen:5>, path=com.revature.models.User.role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userid1_4_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.User [NONE]: select user0_.userid as userid1_4_0_, user0_.email as email2_4_0_, user0_.firstname as firstnam3_4_0_, user0_.lastname as lastname4_4_0_, user0_.password as password5_4_0_, user0_.roleid as roleid7_4_0_, user0_.username as username6_4_0_ from users user0_ where user0_.userid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.User
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c887052]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55fdf7f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=users, columns={userid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55fdf7f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.User
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authoredReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=authoredReimbursments, type=java.util.Collection(com.revature.models.User.authoredReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4091b9c3]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29050de5]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=authoredReimbursments, type=java.util.Collection(com.revature.models.User.authoredReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=email, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstname
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=firstname, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=firstname, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastname
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=password, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolvedReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolvedReimbursments, type=java.util.Collection(com.revature.models.User.resolvedReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3610f277]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c689973]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolvedReimbursments, type=java.util.Collection(com.revature.models.User.resolvedReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=role, type=com.revature.models.Role [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41fa769c]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=role, type=com.revature.models.Role [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=username, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55fdf7f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.User
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.User)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.User, querySpaceUid=<gen:0>, path=com.revature.models.User)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.authoredReimbursments, querySpaceUid=<gen:1>, path=com.revature.models.User.authoredReimbursments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:2>, path=com.revature.models.User.authoredReimbursments.<elements>)
          - CollectionAttributeFetchImpl(collection=com.revature.models.User.resolvedReimbursments, querySpaceUid=<gen:3>, path=com.revature.models.User.resolvedReimbursments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:4>, path=com.revature.models.User.resolvedReimbursments.<elements>)
          - EntityAttributeFetchImpl(entity=com.revature.models.Role, querySpaceUid=<gen:5>, path=com.revature.models.User.role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {userid1_4_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.User [READ]: select user0_.userid as userid1_4_0_, user0_.email as email2_4_0_, user0_.firstname as firstnam3_4_0_, user0_.lastname as lastname4_4_0_, user0_.password as password5_4_0_, user0_.roleid as roleid7_4_0_, user0_.username as username6_4_0_ from users user0_ where user0_.userid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.revature.models.User: select user0_.userid as userid1_4_1_, user0_.email as email2_4_1_, user0_.firstname as firstnam3_4_1_, user0_.lastname as lastname4_4_1_, user0_.password as password5_4_1_, user0_.roleid as roleid7_4_1_, user0_.username as username6_4_1_, role1_.roleid as roleid1_3_0_, role1_.role as role2_3_0_ from users user0_ inner join roles role1_ on user0_.roleid=role1_.roleid where user0_.userid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.revature.models.User: select user0_.userid as userid1_4_1_, user0_.email as email2_4_1_, user0_.firstname as firstnam3_4_1_, user0_.lastname as lastname4_4_1_, user0_.password as password5_4_1_, user0_.roleid as roleid7_4_1_, user0_.username as username6_4_1_, role1_.roleid as roleid1_3_0_, role1_.role as role2_3_0_ from users user0_ inner join roles role1_ on user0_.roleid=role1_.roleid where user0_.userid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3790 - Static SQL for entity: com.revature.models.Type
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3795 -  Version select: select typeid from reimbursment_type where typeid =?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3798 -  Snapshot select: select type_.typeid, type_.type as type2_1_ from reimbursment_type type_ where type_.typeid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimbursment_type (type, typeid) values (?, ?)
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Update 0: update reimbursment_type set type=? where typeid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimbursment_type where typeid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3806 -  Identity insert: insert into reimbursment_type (type) values (?)
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Type
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77db3d02]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@78d9f51b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=reimbursment_type, columns={typeid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@78d9f51b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Type
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=reimbursments, type=java.util.Collection(com.revature.models.Type.reimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23ed382c]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bedd4e4]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=reimbursments, type=java.util.Collection(com.revature.models.Type.reimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=type, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@78d9f51b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Type
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Type)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Type, querySpaceUid=<gen:0>, path=com.revature.models.Type)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Type.reimbursments, querySpaceUid=<gen:1>, path=com.revature.models.Type.reimbursments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:2>, path=com.revature.models.Type.reimbursments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Type)
          - SQL table alias mapping - type0_
          - alias suffix - 0_
          - suffixed key columns - {typeid1_1_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Type [NONE]: select type0_.typeid as typeid1_1_0_, type0_.type as type2_1_0_ from reimbursment_type type0_ where type0_.typeid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Type
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4570d7b6]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72b6832e
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=reimbursment_type, columns={typeid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72b6832e
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Type
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : reimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=reimbursments, type=java.util.Collection(com.revature.models.Type.reimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3850e90c]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9f5016]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=reimbursments, type=java.util.Collection(com.revature.models.Type.reimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=type, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=type, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72b6832e
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Type
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Type)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Type, querySpaceUid=<gen:0>, path=com.revature.models.Type)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Type.reimbursments, querySpaceUid=<gen:1>, path=com.revature.models.Type.reimbursments)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:2>, path=com.revature.models.Type.reimbursments.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Type)
          - SQL table alias mapping - type0_
          - alias suffix - 0_
          - suffixed key columns - {typeid1_1_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Type [READ]: select type0_.typeid as typeid1_1_0_, type0_.type as type2_1_0_ from reimbursment_type type0_ where type0_.typeid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.revature.models.Type: select type0_.typeid as typeid1_1_0_, type0_.type as type2_1_0_ from reimbursment_type type0_ where type0_.typeid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.revature.models.Type: select type0_.typeid as typeid1_1_0_, type0_.type as type2_1_0_ from reimbursment_type type0_ where type0_.typeid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3790 - Static SQL for entity: com.revature.models.Role
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3795 -  Version select: select roleid from roles where roleid =?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3798 -  Snapshot select: select role_.roleid, role_.role as role2_3_ from roles role_ where role_.roleid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into roles (role, roleid) values (?, ?)
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Update 0: update roles set role=? where roleid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from roles where roleid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3806 -  Identity insert: insert into roles (role) values (?)
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Role
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e91ed74]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3878be7b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=roles, columns={roleid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3878be7b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Role
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=role, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=role, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=users, type=java.util.Collection(com.revature.models.Role.users) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7df28f1]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4087c7fc]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=users, type=java.util.Collection(com.revature.models.Role.users) [non-identifier,association])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3878be7b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Role
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Role)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Role, querySpaceUid=<gen:0>, path=com.revature.models.Role)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Role.users, querySpaceUid=<gen:1>, path=com.revature.models.Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=com.revature.models.Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleid1_3_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Role [NONE]: select role0_.roleid as roleid1_3_0_, role0_.role as role2_3_0_ from roles role0_ where role0_.roleid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Role
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@318c68d5]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4cfa83f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=roles, columns={roleid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4cfa83f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Role
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=role, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=role, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : users
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=users, type=java.util.Collection(com.revature.models.Role.users) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@321ca237]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c5a2baf]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=users, type=java.util.Collection(com.revature.models.Role.users) [non-identifier,association])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4cfa83f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Role
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Role)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Role, querySpaceUid=<gen:0>, path=com.revature.models.Role)
          - CollectionAttributeFetchImpl(collection=com.revature.models.Role.users, querySpaceUid=<gen:1>, path=com.revature.models.Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=com.revature.models.Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {roleid1_3_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Role [READ]: select role0_.roleid as roleid1_3_0_, role0_.role as role2_3_0_ from roles role0_ where role0_.roleid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.revature.models.Role: select role0_.roleid as roleid1_3_0_, role0_.role as role2_3_0_ from roles role0_ where role0_.roleid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.revature.models.Role: select role0_.roleid as roleid1_3_0_, role0_.role as role2_3_0_ from roles role0_ where role0_.roleid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3790 - Static SQL for entity: com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3795 -  Version select: select reimbursmentid from reimbursments where reimbursmentid =?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3798 -  Snapshot select: select reimbursem_.reimbursmentid, reimbursem_.amount as amount2_2_, reimbursem_.author as author6_2_, reimbursem_.description as descript3_2_, reimbursem_.resolved as resolved4_2_, reimbursem_.resolver as resolver7_2_, reimbursem_.statusid as statusid8_2_, reimbursem_.submitted as submitte5_2_, reimbursem_.typeid as typeid9_2_ from reimbursments reimbursem_ where reimbursem_.reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into reimbursments (amount, author, description, resolved, resolver, statusid, submitted, typeid, reimbursmentid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Update 0: update reimbursments set amount=?, author=?, description=?, resolved=?, resolver=?, statusid=?, submitted=?, typeid=? where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from reimbursments where reimbursmentid=?
2020-12-02 08:20:32 DEBUG AbstractEntityPersister:3806 -  Identity insert: insert into reimbursments (amount, author, description, resolved, resolver, statusid, submitted, typeid) values (?, ?, ?, ?, ?, ?, ?, ?)
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec22831]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@63f855b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=reimbursments, columns={reimbursmentid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@63f855b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@516592b1]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolved
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolver
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cffcc61]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4373f66f]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@399ca607]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@63f855b
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:0>, path=com.revature.models.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:1>, path=com.revature.models.Reimbursement.author)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=com.revature.models.Reimbursement.resolver)
          - EntityAttributeFetchImpl(entity=com.revature.models.Status, querySpaceUid=<gen:3>, path=com.revature.models.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.revature.models.Type, querySpaceUid=<gen:4>, path=com.revature.models.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimburs1_2_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Reimbursement [NONE]: select reimbursem0_.reimbursmentid as reimburs1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.author as author6_2_0_, reimbursem0_.description as descript3_2_0_, reimbursem0_.resolved as resolved4_2_0_, reimbursem0_.resolver as resolver7_2_0_, reimbursem0_.statusid as statusid8_2_0_, reimbursem0_.submitted as submitte5_2_0_, reimbursem0_.typeid as typeid9_2_0_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:172 -  Starting root entity : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44114b9f]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76bf1bb8
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 - .. Registering AssociationKey : AssociationKey(table=reimbursments, columns={reimbursmentid}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76bf1bb8
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a235b8e]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolved
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolver
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76536c53]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38d08cb5]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363c32cc]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76bf1bb8
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:208 -  Finished root entity : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.revature.models.Reimbursement)
    - Returns
       - EntityReturnImpl(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:0>, path=com.revature.models.Reimbursement)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:1>, path=com.revature.models.Reimbursement.author)
          - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=com.revature.models.Reimbursement.resolver)
          - EntityAttributeFetchImpl(entity=com.revature.models.Status, querySpaceUid=<gen:3>, path=com.revature.models.Reimbursement.status)
          - EntityAttributeFetchImpl(entity=com.revature.models.Type, querySpaceUid=<gen:4>, path=com.revature.models.Reimbursement.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.revature.models.Reimbursement)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {reimburs1_2_0_}

2020-12-02 08:20:32 DEBUG EntityLoader:137 - Static select for entity com.revature.models.Reimbursement [READ]: select reimbursem0_.reimbursmentid as reimburs1_2_0_, reimbursem0_.amount as amount2_2_0_, reimbursem0_.author as author6_2_0_, reimbursem0_.description as descript3_2_0_, reimbursem0_.resolved as resolved4_2_0_, reimbursem0_.resolver as resolver7_2_0_, reimbursem0_.statusid as statusid8_2_0_, reimbursem0_.submitted as submitte5_2_0_, reimbursem0_.typeid as typeid9_2_0_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.revature.models.Reimbursement: select reimbursem0_.reimbursmentid as reimburs1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.author as author6_2_5_, reimbursem0_.description as descript3_2_5_, reimbursem0_.resolved as resolved4_2_5_, reimbursem0_.resolver as resolver7_2_5_, reimbursem0_.statusid as statusid8_2_5_, reimbursem0_.submitted as submitte5_2_5_, reimbursem0_.typeid as typeid9_2_5_, user1_.userid as userid1_4_0_, user1_.email as email2_4_0_, user1_.firstname as firstnam3_4_0_, user1_.lastname as lastname4_4_0_, user1_.password as password5_4_0_, user1_.roleid as roleid7_4_0_, user1_.username as username6_4_0_, role2_.roleid as roleid1_3_1_, role2_.role as role2_3_1_, user3_.userid as userid1_4_2_, user3_.email as email2_4_2_, user3_.firstname as firstnam3_4_2_, user3_.lastname as lastname4_4_2_, user3_.password as password5_4_2_, user3_.roleid as roleid7_4_2_, user3_.username as username6_4_2_, status4_.statusid as statusid1_0_3_, status4_.status as status2_0_3_, type5_.typeid as typeid1_1_4_, type5_.type as type2_1_4_ from reimbursments reimbursem0_ left outer join users user1_ on reimbursem0_.author=user1_.userid left outer join roles role2_ on user1_.roleid=role2_.roleid left outer join users user3_ on reimbursem0_.resolver=user3_.userid inner join reimbursment_status status4_ on reimbursem0_.statusid=status4_.statusid inner join reimbursment_type type5_ on reimbursem0_.typeid=type5_.typeid where reimbursem0_.reimbursmentid=?
2020-12-02 08:20:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.revature.models.Reimbursement: select reimbursem0_.reimbursmentid as reimburs1_2_5_, reimbursem0_.amount as amount2_2_5_, reimbursem0_.author as author6_2_5_, reimbursem0_.description as descript3_2_5_, reimbursem0_.resolved as resolved4_2_5_, reimbursem0_.resolver as resolver7_2_5_, reimbursem0_.statusid as statusid8_2_5_, reimbursem0_.submitted as submitte5_2_5_, reimbursem0_.typeid as typeid9_2_5_, user1_.userid as userid1_4_0_, user1_.email as email2_4_0_, user1_.firstname as firstnam3_4_0_, user1_.lastname as lastname4_4_0_, user1_.password as password5_4_0_, user1_.roleid as roleid7_4_0_, user1_.username as username6_4_0_, role2_.roleid as roleid1_3_1_, role2_.role as role2_3_1_, user3_.userid as userid1_4_2_, user3_.email as email2_4_2_, user3_.firstname as firstnam3_4_2_, user3_.lastname as lastname4_4_2_, user3_.password as password5_4_2_, user3_.roleid as roleid7_4_2_, user3_.username as username6_4_2_, status4_.statusid as statusid1_0_3_, status4_.status as status2_0_3_, type5_.typeid as typeid1_1_4_, type5_.type as type2_1_4_ from reimbursments reimbursem0_ left outer join users user1_ on reimbursem0_.author=user1_.userid left outer join roles role2_ on user1_.roleid=role2_.roleid left outer join users user3_ on reimbursem0_.resolver=user3_.userid inner join reimbursment_status status4_ on reimbursem0_.statusid=status4_.statusid inner join reimbursment_type type5_ on reimbursem0_.typeid=type5_.typeid where reimbursem0_.reimbursmentid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:341 -  Starting root collection : com.revature.models.Role.users
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ccac6f4]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@438c9aa7]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:316 - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@723877dd
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 -  Registering AssociationKey : AssociationKey(table=users, columns={roleid}) -> null
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:454 -  Starting collection element graph : com.revature.models.Role.users
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6d229b1c
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.User
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authoredReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=authoredReimbursments, type=java.util.Collection(com.revature.models.User.authoredReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f825516]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2da99821]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=authoredReimbursments, type=java.util.Collection(com.revature.models.User.authoredReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=email, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=email, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstname
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=firstname, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=firstname, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastname
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=password, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolvedReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolvedReimbursments, type=java.util.Collection(com.revature.models.User.resolvedReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62cba181]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b482cbf]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolvedReimbursments, type=java.util.Collection(com.revature.models.User.resolvedReimbursments) [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : role
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : role
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=username, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@6d229b1c
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:501 -  Finished collection element graph : com.revature.models.Role.users
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:323 - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@723877dd
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:379 -  Finished root collection : com.revature.models.Role.users
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.revature.models.Role.users)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.Role.users, querySpaceUid=<gen:0>, path=[com.revature.models.Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.User, querySpaceUid=<gen:1>, path=[com.revature.models.Role.users].<elements>)
             - CollectionAttributeFetchImpl(collection=com.revature.models.User.authoredReimbursments, querySpaceUid=<gen:2>, path=[com.revature.models.Role.users].<elements>.authoredReimbursments)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:3>, path=[com.revature.models.Role.users].<elements>.authoredReimbursments.<elements>)
             - CollectionAttributeFetchImpl(collection=com.revature.models.User.resolvedReimbursments, querySpaceUid=<gen:4>, path=[com.revature.models.Role.users].<elements>.resolvedReimbursments)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:5>, path=[com.revature.models.Role.users].<elements>.resolvedReimbursments.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.revature.models.Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roleid7_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - userid1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.revature.models.User)
                - SQL table alias mapping - users0_
                - alias suffix - 1_
                - suffixed key columns - {userid1_4_1_}

2020-12-02 08:20:32 DEBUG CollectionLoader:83 - Static select for collection com.revature.models.Role.users: select users0_.roleid as roleid7_4_0_, users0_.userid as userid1_4_0_, users0_.userid as userid1_4_1_, users0_.email as email2_4_1_, users0_.firstname as firstnam3_4_1_, users0_.lastname as lastname4_4_1_, users0_.password as password5_4_1_, users0_.roleid as roleid7_4_1_, users0_.username as username6_4_1_ from users users0_ where users0_.roleid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:341 -  Starting root collection : com.revature.models.User.authoredReimbursments
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5426cb36]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65e22def]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:316 - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4b1ec694
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 -  Registering AssociationKey : AssociationKey(table=reimbursments, columns={author}) -> null
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:454 -  Starting collection element graph : com.revature.models.User.authoredReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3d299393
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : author
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolved
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolver
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f34907b]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b4d4327]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16da1abc]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3d299393
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:501 -  Finished collection element graph : com.revature.models.User.authoredReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:323 - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4b1ec694
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:379 -  Finished root collection : com.revature.models.User.authoredReimbursments
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.revature.models.User.authoredReimbursments)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.User.authoredReimbursments, querySpaceUid=<gen:0>, path=[com.revature.models.User.authoredReimbursments])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:1>, path=[com.revature.models.User.authoredReimbursments].<elements>)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=[com.revature.models.User.authoredReimbursments].<elements>.resolver)
             - EntityAttributeFetchImpl(entity=com.revature.models.Status, querySpaceUid=<gen:3>, path=[com.revature.models.User.authoredReimbursments].<elements>.status)
             - EntityAttributeFetchImpl(entity=com.revature.models.Type, querySpaceUid=<gen:4>, path=[com.revature.models.User.authoredReimbursments].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.revature.models.User.authoredReimbursments)
          - SQL table alias mapping - authoredre0_
          - alias suffix - 0_
          - suffixed key columns - {author6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimburs1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.revature.models.Reimbursement)
                - SQL table alias mapping - authoredre0_
                - alias suffix - 1_
                - suffixed key columns - {reimburs1_2_1_}

2020-12-02 08:20:32 DEBUG CollectionLoader:83 - Static select for collection com.revature.models.User.authoredReimbursments: select authoredre0_.author as author6_2_0_, authoredre0_.reimbursmentid as reimburs1_2_0_, authoredre0_.reimbursmentid as reimburs1_2_1_, authoredre0_.amount as amount2_2_1_, authoredre0_.author as author6_2_1_, authoredre0_.description as descript3_2_1_, authoredre0_.resolved as resolved4_2_1_, authoredre0_.resolver as resolver7_2_1_, authoredre0_.statusid as statusid8_2_1_, authoredre0_.submitted as submitte5_2_1_, authoredre0_.typeid as typeid9_2_1_ from reimbursments authoredre0_ where authoredre0_.author=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:341 -  Starting root collection : com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@671ea6ff]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c52552f]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:316 - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5dc769f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 -  Registering AssociationKey : AssociationKey(table=reimbursments, columns={resolver}) -> null
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:454 -  Starting collection element graph : com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@1b0e9707
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b5f3c7]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolved
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolver
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : resolver
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74024f3]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ae0d43]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@1b0e9707
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:501 -  Finished collection element graph : com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:323 - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5dc769f9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:379 -  Finished root collection : com.revature.models.User.resolvedReimbursments
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.revature.models.User.resolvedReimbursments)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.User.resolvedReimbursments, querySpaceUid=<gen:0>, path=[com.revature.models.User.resolvedReimbursments])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:1>, path=[com.revature.models.User.resolvedReimbursments].<elements>)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=[com.revature.models.User.resolvedReimbursments].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.revature.models.Status, querySpaceUid=<gen:3>, path=[com.revature.models.User.resolvedReimbursments].<elements>.status)
             - EntityAttributeFetchImpl(entity=com.revature.models.Type, querySpaceUid=<gen:4>, path=[com.revature.models.User.resolvedReimbursments].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.revature.models.User.resolvedReimbursments)
          - SQL table alias mapping - resolvedre0_
          - alias suffix - 0_
          - suffixed key columns - {resolver7_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimburs1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.revature.models.Reimbursement)
                - SQL table alias mapping - resolvedre0_
                - alias suffix - 1_
                - suffixed key columns - {reimburs1_2_1_}

2020-12-02 08:20:32 DEBUG CollectionLoader:83 - Static select for collection com.revature.models.User.resolvedReimbursments: select resolvedre0_.resolver as resolver7_2_0_, resolvedre0_.reimbursmentid as reimburs1_2_0_, resolvedre0_.reimbursmentid as reimburs1_2_1_, resolvedre0_.amount as amount2_2_1_, resolvedre0_.author as author6_2_1_, resolvedre0_.description as descript3_2_1_, resolvedre0_.resolved as resolved4_2_1_, resolvedre0_.resolver as resolver7_2_1_, resolvedre0_.statusid as statusid8_2_1_, resolvedre0_.submitted as submitte5_2_1_, resolvedre0_.typeid as typeid9_2_1_ from reimbursments resolvedre0_ where resolvedre0_.resolver=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:341 -  Starting root collection : com.revature.models.Status.reimbursements
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ef718de]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@287ae90c]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:316 - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@2e1b374c
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 -  Registering AssociationKey : AssociationKey(table=reimbursments, columns={statusid}) -> null
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:454 -  Starting collection element graph : com.revature.models.Status.reimbursements
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3fcee3d9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9c93d16]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolved
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolver
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760487aa]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : status
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1526f71]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=type, type=com.revature.models.Type [non-identifier,association])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3fcee3d9
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:501 -  Finished collection element graph : com.revature.models.Status.reimbursements
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:323 - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@2e1b374c
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:379 -  Finished root collection : com.revature.models.Status.reimbursements
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.revature.models.Status.reimbursements)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.Status.reimbursements, querySpaceUid=<gen:0>, path=[com.revature.models.Status.reimbursements])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:1>, path=[com.revature.models.Status.reimbursements].<elements>)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=[com.revature.models.Status.reimbursements].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:3>, path=[com.revature.models.Status.reimbursements].<elements>.resolver)
             - EntityAttributeFetchImpl(entity=com.revature.models.Type, querySpaceUid=<gen:4>, path=[com.revature.models.Status.reimbursements].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.revature.models.Status.reimbursements)
          - SQL table alias mapping - reimbursem0_
          - alias suffix - 0_
          - suffixed key columns - {statusid8_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimburs1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.revature.models.Reimbursement)
                - SQL table alias mapping - reimbursem0_
                - alias suffix - 1_
                - suffixed key columns - {reimburs1_2_1_}

2020-12-02 08:20:32 DEBUG CollectionLoader:83 - Static select for collection com.revature.models.Status.reimbursements: select reimbursem0_.statusid as statusid8_2_0_, reimbursem0_.reimbursmentid as reimburs1_2_0_, reimbursem0_.reimbursmentid as reimburs1_2_1_, reimbursem0_.amount as amount2_2_1_, reimbursem0_.author as author6_2_1_, reimbursem0_.description as descript3_2_1_, reimbursem0_.resolved as resolved4_2_1_, reimbursem0_.resolver as resolver7_2_1_, reimbursem0_.statusid as statusid8_2_1_, reimbursem0_.submitted as submitte5_2_1_, reimbursem0_.typeid as typeid9_2_1_ from reimbursments reimbursem0_ where reimbursem0_.statusid=?
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:341 -  Starting root collection : com.revature.models.Type.reimbursments
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49ca94a9]
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9ab310b]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:316 - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5b40de43
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:648 -  Registering AssociationKey : AssociationKey(table=reimbursments, columns={typeid}) -> null
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:454 -  Starting collection element graph : com.revature.models.Type.reimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:113 - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@49fb0bbd
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:239 - >> Starting entity identifier : com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : amount
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=amount, type=double [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5489b1f7]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=author, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolved
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolved, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : resolver
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4faf104]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=resolver, type=com.revature.models.User [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : status
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5995851e]
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=status, type=com.revature.models.Status [non-identifier,association])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : submitted
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:547 - >> Starting attribute Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:628 - << Finishing up attribute : Attribute(name=submitted, type=timestamp [non-identifier])
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : type
2020-12-02 08:20:32 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : type
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:120 - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@49fb0bbd
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:501 -  Finished collection element graph : com.revature.models.Type.reimbursments
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:323 - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5b40de43
2020-12-02 08:20:32 TRACE AbstractLoadPlanBuildingAssociationVisitationStrategy:379 -  Finished root collection : com.revature.models.Type.reimbursments
2020-12-02 08:20:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-12-02 08:20:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-12-02 08:20:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.revature.models.Type.reimbursments)
    - Returns
       - CollectionReturnImpl(collection=com.revature.models.Type.reimbursments, querySpaceUid=<gen:0>, path=[com.revature.models.Type.reimbursments])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.revature.models.Reimbursement, querySpaceUid=<gen:1>, path=[com.revature.models.Type.reimbursments].<elements>)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:2>, path=[com.revature.models.Type.reimbursments].<elements>.author)
             - EntityAttributeFetchImpl(entity=com.revature.models.User, querySpaceUid=<gen:3>, path=[com.revature.models.Type.reimbursments].<elements>.resolver)
             - EntityAttributeFetchImpl(entity=com.revature.models.Status, querySpaceUid=<gen:4>, path=[com.revature.models.Type.reimbursments].<elements>.status)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.revature.models.Type.reimbursments)
          - SQL table alias mapping - reimbursme0_
          - alias suffix - 0_
          - suffixed key columns - {typeid9_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - reimburs1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.revature.models.Reimbursement)
                - SQL table alias mapping - reimbursme0_
                - alias suffix - 1_
                - suffixed key columns - {reimburs1_2_1_}

2020-12-02 08:20:32 DEBUG CollectionLoader:83 - Static select for collection com.revature.models.Type.reimbursments: select reimbursme0_.typeid as typeid9_2_0_, reimbursme0_.reimbursmentid as reimburs1_2_0_, reimbursme0_.reimbursmentid as reimburs1_2_1_, reimbursme0_.amount as amount2_2_1_, reimbursme0_.author as author6_2_1_, reimbursme0_.description as descript3_2_1_, reimbursme0_.resolved as resolved4_2_1_, reimbursme0_.resolver as resolver7_2_1_, reimbursme0_.statusid as statusid8_2_1_, reimbursme0_.submitted as submitte5_2_1_, reimbursme0_.typeid as typeid9_2_1_ from reimbursments reimbursme0_ where reimbursme0_.typeid=?
2020-12-02 08:20:32 TRACE MetadataContext:204 - Wrapping up metadata context...
2020-12-02 08:20:32 TRACE MetadataContext:216 - Starting entity [com.revature.models.Status]
2020-12-02 08:20:32 TRACE AttributeFactory:137 - Building identifier attribute [Status.statusid]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [statusid]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private int com.revature.models.Status.statusid]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Status.reimbursements]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [reimbursements]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.util.List com.revature.models.Status.reimbursements]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=java.util.Collection(com.revature.models.Status.reimbursements), class=org.hibernate.type.BagType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Status.status]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [status]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.Status.status]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE MetadataContext:251 - Completed entity [com.revature.models.Status]
2020-12-02 08:20:32 TRACE MetadataContext:216 - Starting entity [com.revature.models.User]
2020-12-02 08:20:32 TRACE AttributeFactory:137 - Building identifier attribute [User.userid]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [userid]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private int com.revature.models.User.userid]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.authoredReimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [authoredReimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.util.List com.revature.models.User.authoredReimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=java.util.Collection(com.revature.models.User.authoredReimbursments), class=org.hibernate.type.BagType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.email]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [email]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.User.email]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.firstname]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [firstname]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.User.firstname]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.lastname]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [lastname]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.User.lastname]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.password]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [password]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.User.password]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.resolvedReimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [resolvedReimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.util.List com.revature.models.User.resolvedReimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=java.util.Collection(com.revature.models.User.resolvedReimbursments), class=org.hibernate.type.BagType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.role]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [role]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private com.revature.models.Role com.revature.models.User.role]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=com.revature.models.Role, class=org.hibernate.type.ManyToOneType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [User.username]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [username]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.User.username]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE MetadataContext:251 - Completed entity [com.revature.models.User]
2020-12-02 08:20:32 TRACE MetadataContext:216 - Starting entity [com.revature.models.Type]
2020-12-02 08:20:32 TRACE AttributeFactory:137 - Building identifier attribute [Type.typeid]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [typeid]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private int com.revature.models.Type.typeid]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Type.reimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [reimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.util.List com.revature.models.Type.reimbursments]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=java.util.Collection(com.revature.models.Type.reimbursments), class=org.hibernate.type.BagType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Type.type]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [type]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.Type.type]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE MetadataContext:251 - Completed entity [com.revature.models.Type]
2020-12-02 08:20:32 TRACE MetadataContext:216 - Starting entity [com.revature.models.Role]
2020-12-02 08:20:32 TRACE AttributeFactory:137 - Building identifier attribute [Role.roleid]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [roleid]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private int com.revature.models.Role.roleid]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Role.role]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [role]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.Role.role]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Role.users]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [users]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.util.List com.revature.models.Role.users]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=java.util.Collection(com.revature.models.Role.users), class=org.hibernate.type.BagType]
2020-12-02 08:20:32 TRACE MetadataContext:251 - Completed entity [com.revature.models.Role]
2020-12-02 08:20:32 TRACE MetadataContext:216 - Starting entity [com.revature.models.Reimbursement]
2020-12-02 08:20:32 TRACE AttributeFactory:137 - Building identifier attribute [Reimbursement.reimbursmentid]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [reimbursmentid]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private int com.revature.models.Reimbursement.reimbursmentid]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.amount]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [amount]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private double com.revature.models.Reimbursement.amount]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=double, class=org.hibernate.type.DoubleType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.author]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [author]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private com.revature.models.User com.revature.models.Reimbursement.author]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=com.revature.models.User, class=org.hibernate.type.ManyToOneType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.description]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [description]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.lang.String com.revature.models.Reimbursement.description]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=string, class=org.hibernate.type.StringType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.resolved]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [resolved]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.sql.Timestamp com.revature.models.Reimbursement.resolved]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=timestamp, class=org.hibernate.type.TimestampType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.resolver]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [resolver]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private com.revature.models.User com.revature.models.Reimbursement.resolver]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=com.revature.models.User, class=org.hibernate.type.ManyToOneType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.status]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [status]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private com.revature.models.Status com.revature.models.Reimbursement.status]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=com.revature.models.Status, class=org.hibernate.type.ManyToOneType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.submitted]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [submitted]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private java.sql.Timestamp com.revature.models.Reimbursement.submitted]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=timestamp, class=org.hibernate.type.TimestampType]
2020-12-02 08:20:32 TRACE AttributeFactory:88 - Building attribute [Reimbursement.type]
2020-12-02 08:20:32 TRACE AttributeFactory:446 - Starting attribute metadata determination [type]
2020-12-02 08:20:32 TRACE AttributeFactory:451 -     Determined member [private com.revature.models.Type com.revature.models.Reimbursement.type]
2020-12-02 08:20:32 TRACE AttributeFactory:455 -     Determined type [name=com.revature.models.Type, class=org.hibernate.type.ManyToOneType]
2020-12-02 08:20:32 TRACE MetadataContext:251 - Completed entity [com.revature.models.Reimbursement]
2020-12-02 08:20:32 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
2020-12-02 08:20:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5cd96b41] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [roles_roleid_seq]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [users_userid_seq]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_status_statusid_seq]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursment_type_typeid_seq]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [postgres]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [public]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:61 - Normalizing identifier quoting [reimbursments_reimbursmentid_seq]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [public]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [public] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [reimbursment_status]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [reimbursment_status] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [statusid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [statusid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [status]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [status] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [reimbursment_type]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [reimbursment_type] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [typeid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [typeid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [type]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [type] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [reimbursments]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [reimbursments] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [reimbursmentid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [reimbursmentid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [amount]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [amount] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [description]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [description] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [resolved]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [resolved] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [submitted]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [submitted] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [author]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [author] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [resolver]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [resolver] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [statusid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [statusid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [typeid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [typeid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [roles]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [roles] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [roleid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [roleid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [role]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [role] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [users]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [users] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [userid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [userid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [email]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [email] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [firstname]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [firstname] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [lastname]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [lastname] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [password]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [password] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [username]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [username] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:191 - Normalizing identifier quoting for object name [roleid]
2020-12-02 08:20:32 TRACE NormalizingIdentifierHelperImpl:157 - Rendering unquoted identifier [roleid] in lower case for use in DatabaseMetaData
2020-12-02 08:20:32 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
2020-12-02 08:20:32 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-12-02 08:20:32 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
2020-12-02 08:20:32 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-12-02 08:20:32 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-02 08:20:32 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-02 08:20:32 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-12-02 08:20:32 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-12-02 08:20:32 TRACE TypeConfiguration$Scope:205 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2b03d52f] for TypeConfiguration
2020-12-02 08:20:32 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5482bcac
2020-12-02 08:20:32 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
2020-12-02 08:20:32 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e80a9eb2-1ee5-4a24-9144-5e423954c852 (<unnamed>)
2020-12-02 08:20:32 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-12-02 08:20:32 TRACE SessionFactoryImpl$SessionBuilderImpl:1287 - Opening Hibernate Session.  tenant=null, owner=null
2020-12-02 08:20:32 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
2020-12-02 08:20:32 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-12-02 08:20:32 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.jmx.spi.JmxService]
2020-12-02 08:20:32 TRACE SessionImpl:291 - Opened Session [059877f8-402c-4680-b3de-1b90802f5c7e] at timestamp: 1606918832469
2020-12-02 08:20:32 TRACE QueryPlanCache:157 - Unable to locate HQL query plan in cache; generating (from Reimbursement where reimbursmentid = 3)
2020-12-02 08:20:32 TRACE AbstractServiceRegistryImpl:233 - Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
2020-12-02 08:20:32 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@697d6ded
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.revature.models.Reimbursement where reimbursmentid = 3
2020-12-02 08:20:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'revature'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Reimbursement'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'reimbursmentid'
          \-[NUM_INT] Node: '3'

2020-12-02 08:20:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-12-02 08:20:32 DEBUG FromElement:146 - FromClause{level=1} : com.revature.models.Reimbursement (<no alias>) -> reimbursem0_
2020-12-02 08:20:32 TRACE HqlSqlWalker:716 - Attempting to resolve property [reimbursmentid] as a non-qualified ref
2020-12-02 08:20:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2020-12-02 08:20:32 TRACE FromElement:650 - Handling property dereference [com.revature.models.Reimbursement (null) -> reimbursmentid (class)]
2020-12-02 08:20:32 DEBUG DotNode:689 - getDataType() : reimbursmentid -> org.hibernate.type.IntegerType@24d4d7c9
2020-12-02 08:20:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.reimbursmentid -> reimbursem0_.reimbursmentid
2020-12-02 08:20:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-12-02 08:20:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} reimbursments reimbursem0_ ) ( where ( = ( reimbursem0_.reimbursmentid {synthetic-alias} reimbursmentid ) 3 ) ) )
2020-12-02 08:20:32 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2020-12-02 08:20:32 DEBUG JoinProcessor:192 - Using FROM fragment [reimbursments reimbursem0_]
2020-12-02 08:20:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (reimbursments)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'reimbursem0_.reimbursmentid as reimburs1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reimbursments,tableAlias=reimbursem0_,origin=null,columns={,className=com.revature.models.Reimbursement}}}
    |  \-[SQL_TOKEN] SqlFragment: 'reimbursem0_.amount as amount2_2_, reimbursem0_.author as author6_2_, reimbursem0_.description as descript3_2_, reimbursem0_.resolved as resolved4_2_, reimbursem0_.resolver as resolver7_2_, reimbursem0_.statusid as statusid8_2_, reimbursem0_.submitted as submitte5_2_, reimbursem0_.typeid as typeid9_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[reimbursem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'reimbursments reimbursem0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reimbursments,tableAlias=reimbursem0_,origin=null,columns={,className=com.revature.models.Reimbursement}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'reimbursem0_.reimbursmentid' {propertyName=reimbursmentid,dereferenceType=PRIMITIVE,getPropertyPath=reimbursmentid,path={synthetic-alias}.reimbursmentid,tableAlias=reimbursem0_,className=com.revature.models.Reimbursement,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'reimbursmentid' {originalText=reimbursmentid}
          \-[NUM_INT] LiteralNode: '3'

2020-12-02 08:20:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:254 - HQL: from com.revature.models.Reimbursement where reimbursmentid = 3
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:255 - SQL: select reimbursem0_.reimbursmentid as reimburs1_2_, reimbursem0_.amount as amount2_2_, reimbursem0_.author as author6_2_, reimbursem0_.description as descript3_2_, reimbursem0_.resolved as resolved4_2_, reimbursem0_.resolver as resolver7_2_, reimbursem0_.statusid as statusid8_2_, reimbursem0_.submitted as submitte5_2_, reimbursem0_.typeid as typeid9_2_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=3
2020-12-02 08:20:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-12-02 08:20:32 TRACE QueryPlanCache:169 - Located HQL query plan in cache (from Reimbursement where reimbursmentid = 3)
2020-12-02 08:20:32 TRACE QueryPlanCache:169 - Located HQL query plan in cache (from Reimbursement where reimbursmentid = 3)
2020-12-02 08:20:32 TRACE HQLQueryPlan:196 - Find: from Reimbursement where reimbursmentid = 3
2020-12-02 08:20:32 TRACE QueryParameters:325 - Named parameters: {}
2020-12-02 08:20:32 DEBUG SQL:94 - select reimbursem0_.reimbursmentid as reimburs1_2_, reimbursem0_.amount as amount2_2_, reimbursem0_.author as author6_2_, reimbursem0_.description as descript3_2_, reimbursem0_.resolved as resolved4_2_, reimbursem0_.resolver as resolver7_2_, reimbursem0_.statusid as statusid8_2_, reimbursem0_.submitted as submitte5_2_, reimbursem0_.typeid as typeid9_2_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=3
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:68 - Registering statement [select reimbursem0_.reimbursmentid as reimburs1_2_, reimbursem0_.amount as amount2_2_, reimbursem0_.author as author6_2_, reimbursem0_.description as descript3_2_, reimbursem0_.resolved as resolved4_2_, reimbursem0_.resolver as resolver7_2_, reimbursem0_.statusid as statusid8_2_, reimbursem0_.submitted as submitte5_2_, reimbursem0_.typeid as typeid9_2_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=3]
2020-12-02 08:20:32 TRACE JdbcCoordinatorImpl:339 - Registering last query statement [select reimbursem0_.reimbursmentid as reimburs1_2_, reimbursem0_.amount as amount2_2_, reimbursem0_.author as author6_2_, reimbursem0_.description as descript3_2_, reimbursem0_.resolved as resolved4_2_, reimbursem0_.resolver as resolver7_2_, reimbursem0_.statusid as statusid8_2_, reimbursem0_.submitted as submitte5_2_, reimbursem0_.typeid as typeid9_2_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=3]
2020-12-02 08:20:32 TRACE Loader:2038 - Bound [1] parameters total
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:196 - Registering result set [org.postgresql.jdbc.PgResultSet@59096b66]
2020-12-02 08:20:32 TRACE Loader:982 - Processing result set
2020-12-02 08:20:32 DEBUG Loader:384 - Result set row: 0
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([reimburs1_2_] : [INTEGER]) - [3]
2020-12-02 08:20:32 DEBUG Loader:1536 - Result row: EntityKey[com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 TRACE Loader:1722 - Initializing object from ResultSet: [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 TRACE AbstractEntityPersister:2944 - Hydrating entity: [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([amount2_2_] : [DOUBLE]) - [20.58]
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([author6_2_] : [INTEGER]) - [1]
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([descript3_2_] : [VARCHAR]) - [this is a test]
2020-12-02 08:20:32 TRACE BasicExtractor:50 - extracted value ([resolved4_2_] : [TIMESTAMP]) - [null]
2020-12-02 08:20:32 TRACE BasicExtractor:50 - extracted value ([resolver7_2_] : [INTEGER]) - [null]
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([statusid8_2_] : [INTEGER]) - [1]
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([submitte5_2_] : [TIMESTAMP]) - [2020-12-02 08:18:16.724]
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([typeid9_2_] : [INTEGER]) - [3]
2020-12-02 08:20:32 TRACE Loader:1007 - Done processing result set (1 rows)
2020-12-02 08:20:32 TRACE Loader:1148 - Total objects hydrated: 1
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:144 - Resolving attributes for [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `amount` : value = 20.58
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`amount`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `author` : value = 1
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`author`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 TRACE DefaultLoadEventListener:236 - Loading entity: [com.revature.models.User#1]
2020-12-02 08:20:32 TRACE DefaultLoadEventListener:338 - Creating new proxy for entity
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `description` : value = this is a test
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `resolved` : value = null
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`resolved`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `resolver` : value = null
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`resolver`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `status` : value = 1
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`status`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 TRACE DefaultLoadEventListener:236 - Loading entity: [com.revature.models.Status#1]
2020-12-02 08:20:32 TRACE DefaultLoadEventListener:338 - Creating new proxy for entity
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `submitted` : value = 2020-12-02 08:18:16.724
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`submitted`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `type` : value = 3
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`type`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 TRACE DefaultLoadEventListener:236 - Loading entity: [com.revature.models.Type#3]
2020-12-02 08:20:32 TRACE DefaultLoadEventListener:338 - Creating new proxy for entity
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:304 - Done materializing entity [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:82 - Releasing statement [select reimbursem0_.reimbursmentid as reimburs1_2_, reimbursem0_.amount as amount2_2_, reimbursem0_.author as author6_2_, reimbursem0_.description as descript3_2_, reimbursem0_.resolved as resolved4_2_, reimbursem0_.resolver as resolver7_2_, reimbursem0_.statusid as statusid8_2_, reimbursem0_.submitted as submitte5_2_, reimbursem0_.typeid as typeid9_2_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=3]
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:146 - Closing result set [org.postgresql.jdbc.PgResultSet@59096b66]
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:162 - Closing prepared statement [select reimbursem0_.reimbursmentid as reimburs1_2_, reimbursem0_.amount as amount2_2_, reimbursem0_.author as author6_2_, reimbursem0_.description as descript3_2_, reimbursem0_.resolved as resolved4_2_, reimbursem0_.resolver as resolver7_2_, reimbursem0_.statusid as statusid8_2_, reimbursem0_.submitted as submitte5_2_, reimbursem0_.typeid as typeid9_2_ from reimbursments reimbursem0_ where reimbursem0_.reimbursmentid=3]
2020-12-02 08:20:32 TRACE JdbcCoordinatorImpl:269 - Starting after statement execution processing [AFTER_TRANSACTION]
2020-12-02 08:20:32 TRACE StatefulPersistenceContext:916 - Initializing non-lazy collections
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:53 - LogicalConnection#afterTransaction
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:302 - Releasing JDBC resources
2020-12-02 08:20:32 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:302 - Releasing JDBC resources
2020-12-02 08:20:32 TRACE QueryPlanCache:157 - Unable to locate HQL query plan in cache; generating (from Status where status like 'Approved')
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.revature.models.Status where status like 'Approved'
2020-12-02 08:20:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'revature'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'Status'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[IDENT] Node: 'status'
          \-[QUOTED_STRING] Node: ''Approved''

2020-12-02 08:20:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-12-02 08:20:32 DEBUG FromElement:146 - FromClause{level=1} : com.revature.models.Status (<no alias>) -> status0_
2020-12-02 08:20:32 TRACE HqlSqlWalker:716 - Attempting to resolve property [status] as a non-qualified ref
2020-12-02 08:20:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2020-12-02 08:20:32 TRACE FromElement:650 - Handling property dereference [com.revature.models.Status (null) -> status (class)]
2020-12-02 08:20:32 DEBUG DotNode:689 - getDataType() : status -> org.hibernate.type.StringType@62fe6067
2020-12-02 08:20:32 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.status -> status0_.status
2020-12-02 08:20:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-12-02 08:20:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} reimbursment_status status0_ ) ( where ( like ( status0_.status {synthetic-alias} status ) 'Approved' ) ) )
2020-12-02 08:20:32 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2020-12-02 08:20:32 DEBUG JoinProcessor:192 - Using FROM fragment [reimbursment_status status0_]
2020-12-02 08:20:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (reimbursment_status)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'status0_.statusid as statusid1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reimbursment_status,tableAlias=status0_,origin=null,columns={,className=com.revature.models.Status}}}
    |  \-[SQL_TOKEN] SqlFragment: 'status0_.status as status2_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[status0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'reimbursment_status status0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=reimbursment_status,tableAlias=status0_,origin=null,columns={,className=com.revature.models.Status}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'status0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path={synthetic-alias}.status,tableAlias=status0_,className=com.revature.models.Status,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[QUOTED_STRING] LiteralNode: ''Approved''

2020-12-02 08:20:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:254 - HQL: from com.revature.models.Status where status like 'Approved'
2020-12-02 08:20:32 DEBUG QueryTranslatorImpl:255 - SQL: select status0_.statusid as statusid1_0_, status0_.status as status2_0_ from reimbursment_status status0_ where status0_.status like 'Approved'
2020-12-02 08:20:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-12-02 08:20:32 TRACE QueryPlanCache:169 - Located HQL query plan in cache (from Status where status like 'Approved')
2020-12-02 08:20:32 TRACE QueryPlanCache:169 - Located HQL query plan in cache (from Status where status like 'Approved')
2020-12-02 08:20:32 TRACE HQLQueryPlan:196 - Find: from Status where status like 'Approved'
2020-12-02 08:20:32 TRACE QueryParameters:325 - Named parameters: {}
2020-12-02 08:20:32 DEBUG SQL:94 - select status0_.statusid as statusid1_0_, status0_.status as status2_0_ from reimbursment_status status0_ where status0_.status like 'Approved'
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:68 - Registering statement [select status0_.statusid as statusid1_0_, status0_.status as status2_0_ from reimbursment_status status0_ where status0_.status like 'Approved']
2020-12-02 08:20:32 TRACE JdbcCoordinatorImpl:339 - Registering last query statement [select status0_.statusid as statusid1_0_, status0_.status as status2_0_ from reimbursment_status status0_ where status0_.status like 'Approved']
2020-12-02 08:20:32 TRACE Loader:2038 - Bound [1] parameters total
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:196 - Registering result set [org.postgresql.jdbc.PgResultSet@601eb4af]
2020-12-02 08:20:32 TRACE Loader:982 - Processing result set
2020-12-02 08:20:32 DEBUG Loader:384 - Result set row: 0
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([statusid1_0_] : [INTEGER]) - [2]
2020-12-02 08:20:32 DEBUG Loader:1536 - Result row: EntityKey[com.revature.models.Status#2]
2020-12-02 08:20:32 TRACE Loader:1722 - Initializing object from ResultSet: [com.revature.models.Status#2]
2020-12-02 08:20:32 TRACE AbstractEntityPersister:2944 - Hydrating entity: [com.revature.models.Status#2]
2020-12-02 08:20:32 TRACE BasicExtractor:60 - extracted value ([status2_0_] : [VARCHAR]) - [Approved]
2020-12-02 08:20:32 TRACE Loader:1007 - Done processing result set (1 rows)
2020-12-02 08:20:32 TRACE Loader:1148 - Total objects hydrated: 1
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:144 - Resolving attributes for [com.revature.models.Status#2]
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `reimbursements` : value = NOT NULL COLLECTION
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`reimbursements`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 TRACE CollectionType:813 - Created collection wrapper: [com.revature.models.Status.reimbursements#2]
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:155 - Processing attribute `status` : value = Approved
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:182 - Attribute (`status`)  - enhanced for lazy-loading? - false
2020-12-02 08:20:32 DEBUG TwoPhaseLoad:304 - Done materializing entity [com.revature.models.Status#2]
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:82 - Releasing statement [select status0_.statusid as statusid1_0_, status0_.status as status2_0_ from reimbursment_status status0_ where status0_.status like 'Approved']
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:146 - Closing result set [org.postgresql.jdbc.PgResultSet@601eb4af]
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:162 - Closing prepared statement [select status0_.statusid as statusid1_0_, status0_.status as status2_0_ from reimbursment_status status0_ where status0_.status like 'Approved']
2020-12-02 08:20:32 TRACE JdbcCoordinatorImpl:269 - Starting after statement execution processing [AFTER_TRANSACTION]
2020-12-02 08:20:32 TRACE StatefulPersistenceContext:916 - Initializing non-lazy collections
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:53 - LogicalConnection#afterTransaction
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:302 - Releasing JDBC resources
2020-12-02 08:20:32 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:302 - Releasing JDBC resources
2020-12-02 08:20:32 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-12-02 08:20:32 DEBUG TransactionImpl:84 - begin
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:66 - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:68 - Transaction begun via JDBC Connection.setAutoCommit(false)
2020-12-02 08:20:32 TRACE JdbcResourceLocalTransactionCoordinatorImpl:172 - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2020-12-02 08:20:32 TRACE DefaultSaveOrUpdateEventListener:103 - Ignoring persistent instance
2020-12-02 08:20:32 TRACE DefaultSaveOrUpdateEventListener:140 - Object already associated with session: [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 DEBUG TransactionImpl:101 - committing
2020-12-02 08:20:32 TRACE JdbcResourceLocalTransactionCoordinatorImpl:176 - ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2020-12-02 08:20:32 TRACE SessionImpl:2524 - SessionImpl#beforeTransactionCompletion()
2020-12-02 08:20:32 TRACE SessionImpl:513 - Automatically flushing session
2020-12-02 08:20:32 TRACE AbstractFlushingEventListener:76 - Flushing session
2020-12-02 08:20:32 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2020-12-02 08:20:32 TRACE Cascade:84 - Processing cascade ACTION_SAVE_UPDATE for: com.revature.models.Reimbursement
2020-12-02 08:20:32 TRACE CascadingAction:218 - Cascading to save or update: com.revature.models.User
2020-12-02 08:20:32 TRACE DefaultSaveOrUpdateEventListener:65 - Reassociated uninitialized proxy
2020-12-02 08:20:32 TRACE CascadingAction:218 - Cascading to save or update: com.revature.models.Status
2020-12-02 08:20:32 TRACE AbstractSaveEventListener:497 - Persistent instance of: com.revature.models.Status
2020-12-02 08:20:32 TRACE DefaultSaveOrUpdateEventListener:103 - Ignoring persistent instance
2020-12-02 08:20:32 TRACE DefaultSaveOrUpdateEventListener:140 - Object already associated with session: [com.revature.models.Status#2]
2020-12-02 08:20:32 TRACE CascadingAction:218 - Cascading to save or update: com.revature.models.Type
2020-12-02 08:20:32 TRACE DefaultSaveOrUpdateEventListener:65 - Reassociated uninitialized proxy
2020-12-02 08:20:32 TRACE Cascade:191 - Done processing cascade ACTION_SAVE_UPDATE for: com.revature.models.Reimbursement
2020-12-02 08:20:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-12-02 08:20:32 TRACE AbstractFlushingEventListener:208 - Flushing entities and processing referenced collections
2020-12-02 08:20:32 TRACE AbstractEntityPersister:4473 - com.revature.models.Reimbursement.status is dirty
2020-12-02 08:20:32 TRACE DefaultFlushEntityEventListener:687 - Found dirty properties [[com.revature.models.Reimbursement#3]] : [status]
2020-12-02 08:20:32 TRACE DefaultFlushEntityEventListener:276 - Updating entity: [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 DEBUG Collections:209 - Collection found: [com.revature.models.Status.reimbursements#2], was: [com.revature.models.Status.reimbursements#2] (uninitialized)
2020-12-02 08:20:32 TRACE AbstractFlushingEventListener:251 - Processing unreferenced collections
2020-12-02 08:20:32 TRACE AbstractFlushingEventListener:268 - Scheduling collection removes/(re)creates/updates
2020-12-02 08:20:32 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2020-12-02 08:20:32 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2020-12-02 08:20:32 DEBUG EntityPrinter:110 - Listing entities:
2020-12-02 08:20:32 DEBUG EntityPrinter:117 - com.revature.models.Reimbursement{resolver=null, amount=20.58, submitted=2020-12-02 08:18:16.724, author=<uninitialized>, reimbursmentid=3, description=this is a test, type=<uninitialized>, resolved=null, status=com.revature.models.Status#2}
2020-12-02 08:20:32 DEBUG EntityPrinter:117 - com.revature.models.Status{statusid=2, reimbursements=<uninitialized>, status=Approved}
2020-12-02 08:20:32 TRACE AbstractFlushingEventListener:344 - Executing flush
2020-12-02 08:20:32 TRACE AbstractEntityPersister:3290 - Updating entity: [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 DEBUG SQL:94 - update reimbursments set amount=?, author=?, description=?, resolved=?, resolver=?, statusid=?, submitted=?, typeid=? where reimbursmentid=?
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:68 - Registering statement [update reimbursments set amount=?, author=?, description=?, resolved=?, resolver=?, statusid=?, submitted=?, typeid=? where reimbursmentid=?]
2020-12-02 08:20:32 TRACE AbstractEntityPersister:2869 - Dehydrating entity: [com.revature.models.Reimbursement#3]
2020-12-02 08:20:32 TRACE BasicBinder:64 - binding parameter [1] as [DOUBLE] - [20.58]
2020-12-02 08:20:32 TRACE BasicBinder:64 - binding parameter [2] as [INTEGER] - [1]
2020-12-02 08:20:32 TRACE BasicBinder:64 - binding parameter [3] as [VARCHAR] - [this is a test]
2020-12-02 08:20:32 TRACE BasicBinder:52 - binding parameter [4] as [TIMESTAMP] - [null]
2020-12-02 08:20:32 TRACE BasicBinder:52 - binding parameter [5] as [INTEGER] - [null]
2020-12-02 08:20:32 TRACE BasicBinder:64 - binding parameter [6] as [INTEGER] - [2]
2020-12-02 08:20:32 TRACE BasicBinder:64 - binding parameter [7] as [TIMESTAMP] - [2020-12-02 08:18:16.724]
2020-12-02 08:20:32 TRACE BasicBinder:64 - binding parameter [8] as [INTEGER] - [3]
2020-12-02 08:20:32 TRACE BasicBinder:64 - binding parameter [9] as [INTEGER] - [3]
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:82 - Releasing statement [update reimbursments set amount=20.58, author=1, description='this is a test', resolved=NULL, resolver=NULL, statusid=2, submitted='2020-12-02 08:18:16.724-06', typeid=3 where reimbursmentid=3]
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:162 - Closing prepared statement [update reimbursments set amount=20.58, author=1, description='this is a test', resolved=NULL, resolver=NULL, statusid=2, submitted='2020-12-02 08:18:16.724-06', typeid=3 where reimbursmentid=3]
2020-12-02 08:20:32 TRACE JdbcCoordinatorImpl:269 - Starting after statement execution processing [AFTER_TRANSACTION]
2020-12-02 08:20:32 TRACE JdbcCoordinatorImpl:269 - Starting after statement execution processing [AFTER_TRANSACTION]
2020-12-02 08:20:32 TRACE AbstractFlushingEventListener:376 - Post flush
2020-12-02 08:20:32 TRACE SynchronizationRegistryStandardImpl:55 - SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:80 - Preparing to commit transaction via JDBC Connection.commit()
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:83 - Transaction committed via JDBC Connection.commit()
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:53 - LogicalConnection#afterTransaction
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:302 - Releasing JDBC resources
2020-12-02 08:20:32 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:302 - Releasing JDBC resources
2020-12-02 08:20:32 TRACE JdbcResourceLocalTransactionCoordinatorImpl:194 - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2020-12-02 08:20:32 TRACE SynchronizationRegistryStandardImpl:159 - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2020-12-02 08:20:32 TRACE AbstractLogicalConnectionImplementor:53 - LogicalConnection#afterTransaction
2020-12-02 08:20:32 TRACE ResourceRegistryStandardImpl:302 - Releasing JDBC resources
2020-12-02 08:20:32 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2020-12-02 08:20:32 TRACE SessionImpl:2538 - SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
